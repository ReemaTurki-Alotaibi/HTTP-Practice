# -*- coding: utf-8 -*-
"""HTTP_Practice_lab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SCVl6dBdCW_MoHE6iLPQ7UYGDgbeva45

**1. Install Required Libraries**
"""

!pip install requests

"""**2. Define HTTP Functions**"""

import requests

#Perform a Simple GET Request
def perform_get_request():
    url = "https://jsonplaceholder.typicode.com/posts/1"
    response = requests.get(url)
    return response

#Perform a GET Request with Parameters
def perform_get_with_params():
    url = "https://jsonplaceholder.typicode.com/posts"
    params = {"userId": 1}
    response = requests.get(url, params=params)
    return response

#Perform a POST Request
def perform_post_request():
    url = "https://jsonplaceholder.typicode.com/posts"
    data = {
        "title": "Test Post",
        "body": "This is a test post",
        "userId": 1
    }
    response = requests.post(url, json=data)
    return response

#Perform a PUT Request
def perform_put_request():
    url = "https://jsonplaceholder.typicode.com/posts/1"
    data = {
        "title": "Updated Title",
        "body": "Updated Content",
        "userId": 1
    }
    response = requests.put(url, json=data)
    return response

# Perform a PATCH Request
def perform_patch_request():
    url = "https://jsonplaceholder.typicode.com/posts/1"
    data = {
        "title": "Partially Updated Title"
    }
    response = requests.patch(url, json=data)
    return response

#Perform a DELETE Request
def perform_delete_request():
    url = "https://httpbin.org/delete"
    response = requests.delete(url)
    return response

# Inspect Headers During a Redirect Request
def inspect_redirect_headers():
    url = "http://httpbin.org/redirect/1"
    response = requests.get(url, allow_redirects=False)
    return response.headers.get("Location")

"""**3. Define Tests**"""

def test_1_perform_get_request():
    response = perform_get_request()
    print("Test 1 - GET Request:", response.json())
    assert response.status_code == 200
    assert response.request.method == 'GET'
    assert response.request.url == 'https://jsonplaceholder.typicode.com/posts/1'

def test_2_perform_get_request_with_params():
    response = perform_get_with_params()
    print("Test 2 - GET Request with Params:", response.json())
    assert response.status_code == 200
    assert response.request.method == 'GET'
    assert "userId=1" in response.request.url

def test_3_perform_post_request():
    response = perform_post_request()
    print("Test 3 - POST Request:", response.json())
    assert response.status_code == 201  # 201 Created
    assert response.request.method == 'POST'
    assert response.json()["title"] == "Test Post"

def test_4_perform_put_request():
    response = perform_put_request()
    print("Test 4 - PUT Request:", response.json())
    assert response.status_code == 200
    assert response.request.method == 'PUT'
    assert response.json()["title"] == "Updated Title"

def test_5_perform_patch_request():
    response = perform_patch_request()
    print("Test 5 - PATCH Request:", response.json())
    assert response.status_code == 200
    assert response.request.method == 'PATCH'
    assert response.json()["title"] == "Partially Updated Title"

def test_6_perform_delete_request():
    response = perform_delete_request()
    print("Test 6 - DELETE Request:", response.status_code)
    assert response.status_code == 200
    assert response.request.method == 'DELETE'

def test_7_perform_redirect_request():
    location_header = inspect_redirect_headers()
    print("Test 7 - Redirect Location:", location_header)
    assert location_header == '/get'

"""**4. Run All Tests**"""

test_1_perform_get_request()
test_2_perform_get_request_with_params()
test_3_perform_post_request()
test_4_perform_put_request()
test_5_perform_patch_request()
test_6_perform_delete_request()
test_7_perform_redirect_request()

print("All tests passed!")